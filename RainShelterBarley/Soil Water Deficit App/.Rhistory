end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
data <- allData()
source('datafunctions.R')
data <- allData()
source('datafunctions.R')
source('datafunctions.R')
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
con <- DBConnection()
header_data <- dbReadTable(con, "headerversion")
raw_data<- dbReadTable(con, "rawcsvdata")
closeDBConnection(con)
header_names <- names(read.csv(textConnection(header_data$HeaderLine)))
all_data <- separate(raw_data, line, into=header_names, sep=",")
library(dplyr)
all_data <- separate(raw_data, line, into=header_names, sep=",")
library(tidyr)
all_data <- separate(raw_data, line, into=header_names, sep=",")
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
df<- mergeData(start_date, end_date, sensor_type)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
allData <- mergeData(start_date, end_date, sensor_type)
View(allData)
field_capacity <- allData()%>%
subset(allData, Time >= as.POSIXct('2014-11-05') & Time < as.POSIXct('2014-11-06'))
field_capacity <- allData()%>%
subset(allData, Time >= as.POSIXct('2014-11-05') & Time < as.POSIXct('2014-11-06'))
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
calculateSoilWaterDeficit(allData)
profile_water <- calculateProfileWater(data)
profile_water <- calculateProfileWater(data)
calculateProfileWater(allData)
df<-calculateProfileWater(allData)
class(allData)
df<- allData()
class(df)
start_date = '2014-12-01'
end_date = '2014-12-31'
subset_data <- allData() %>%
filter(Time >= as.POSIXct(start_date) & Time < as.POSIXct(end_date))%>%
gather("sensorid", "value", RECORD:CS650.192.6.)
subset_sensorinfo <- allSensorInfo()%>%
filter(measurement==sensor_type)
class(subset_data)
class(subset_sensorinfo)
merge_data <- merge(subset_data, subset_sensorinfo, by=c('sensorid'))%>%
select(Time, value, cultivar, irrigation, depth, plot)
class(merge_data)
merge_data$Group <-c(paste(data$cultivar, data$irrigation,sep=" "))
merge_data$value<-as.numeric(as.character(data$value))
merge_data$Group <-c(paste(merge_data$cultivar, merge_data$irrigation,sep=" "))
merge_data$value<-as.numeric(as.character(merge_data$value))
class(merge_data)
allData <- mergeData(start_date, end_date, sensor_type)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
class(allData)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
df<-calculateFieldCapacity()
df<-allData()
df<-calculateFieldCapacity()
data <- mergeData(as.POSIXct('2014-11-05'), as.POSIXct('2014-11-06'), "VolumetriCWaterContent")
data <- mergeData(as.POSIXct('2014-11-05'), as.POSIXct('2014-11-06'), "VolumetriCWaterContent")
allData <- mergeData(start_date, end_date, sensor_type)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
class(allData)
view(allData)
calculateProfileWater(allData)
field_capacity <- calculateFieldCapacity()
data <- mergeData(as.POSIXct('2014-11-05'), as.POSIXct('2014-11-06'), "VolumetriCWaterContent")
data <- mergeData('2014-11-05', '2014-11-06', "VolumetriCWaterContent")
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
data <- mergeData(start_date, end_date, sensor_type)
allData <- mergeData(start_date, end_date, sensor_type)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
df<-calculateFieldCapacity()
tart_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
fc_data <- mergeData(start_date, end_date, sensor_type)
subset_data <- allData()
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df<-calculateFieldCapacity()
View(df)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df<-calculateFieldCapacity()
View(df)
View(df)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df<-calculateFieldCapacity()
View(df)
fc_data
start_date = '2014-12-05'
end_date = '2014-12-06'
sensor_type ="VolumetricWaterContent"
fc_data <- mergeData(start_date, end_date, sensor_type)
View(fc_data)
start_date = '2014-11-05'
end_date = '2014-11-06'
sensor_type ="VolumetricWaterContent"
fc_data <- mergeData(start_date, end_date, sensor_type)
View(fc_data)
View(fc_data)
start_date = '2014-11-05'
end_date = '2014-11-06'
sensor_type ="VolumetricWaterContent"
fc_data <- mergeData(start_date, end_date, sensor_type)
field_capacity <- calculateProfileWater(fc_data)%>%
group_by(Group, plot)%>%
summarise(fieldcapacity=max(profilewater, na.rm=TRUE)+40)
View(field_capacity)
View(field_capacity)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
allData <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(allData)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(df)
summary_data <- soil_water_deficit %>%
group_by(Group, time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
summary_data <- soil_water_deficit %>%
group_by(Group, time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
View(soil_water_deficit)
summary_data <- soil_water_deficit %>%
group_by(Group, Time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
View(summary_data)
ggplot(summary_data) +
geom_ribbon(aes(x=time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
library(ggplot2)
gplot(summary_data) +
geom_ribbon(aes(x=time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
ggplot(summary_data) +
geom_ribbon(aes(x=time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
library(scales)
ggplot(summary_data) +
geom_ribbon(aes(x=time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
View(summary_data)
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
library(ggplot2)
library(scales)
start_date = '2014-11-05'
end_date = '2014-11-30'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(df)
summary_data <- soil_water_deficit %>%
group_by(Group, Time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-125, 15) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
max_value<-max(summary_data)
max_value<-max(summary_data$max)
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-150, 25) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
library(ggplot2)
library(scales)
start_date = '2014-12-01'
end_date = '2014-12-31'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(df)
summary_data <- soil_water_deficit %>%
group_by(Group, Time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-150, 25) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-200, 50) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-250, 50) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley/Soil Water Deficit App')
source('datafunctions.R')
library(dplyr)
library(ggplot2)
library(scales)
start_date = '2014-11-05'
end_date = '2014-11-30'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(df)
summary_data <- soil_water_deficit %>%
group_by(Group, Time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-250, 50) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
start_date = '2014-11-05'
end_date = '2014-12-30'
sensor_type ="VolumetricWaterContent"
#data <- retrieveData(start_date, end_date, sensor_type)
#soilwaterdeficit <- calculateSoilWaterDeficit(data)
df <- mergeData(start_date, end_date, sensor_type)
soil_water_deficit <- calculateSoilWaterDeficit(df)
summary_data <- soil_water_deficit %>%
group_by(Group, Time) %>%
summarise(Mean=mean(soilwaterdeficit, na.rm=TRUE),
Max=max(soilwaterdeficit, na.rm=TRUE),
Min=min(soilwaterdeficit, na.rm=TRUE))
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-250, 50) +
scale_x_datetime(breaks = "2 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
ggplot(summary_data) +
geom_ribbon(aes(x=Time, ymin=Min, ymax=Max, fill=Group), alpha=0.2) +
geom_line(aes(x=Time, y=Mean, colour=Group, group=Group))+
ylim (-250, 50) +
scale_x_datetime(breaks = "5 days", labels=date_format("%b %d")) +
xlab("Date") + ylab("Soil Water Deficit (mm)")
View(soil_water_deficit)
summary(soil_water_deficit)
setwd('C:/GitHubRepos/Summer Project - R/RainShelterBarley')
runApp('Soil Water Deficit App')
shiny::runApp('Soil Water Deficit App')
shiny::runApp('Soil Water Deficit App')
shiny::runApp('Soil Water Deficit App')
shiny::runApp('Soil Water Deficit App')
